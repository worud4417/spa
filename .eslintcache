[{"F:\\react\\spa\\src\\index.js":"1","F:\\react\\spa\\src\\reportWebVitals.js":"2","F:\\react\\spa\\src\\App.js":"3","F:\\react\\spa\\src\\components\\headerComponents\\headerComponet.js":"4","F:\\react\\spa\\src\\components\\mainComponents\\mainComponet.js":"5","F:\\react\\spa\\src\\components\\footerComponents\\footerComponent.js":"6","F:\\react\\spa\\src\\components\\headerComponents\\LoginComponent.js":"7","F:\\react\\spa\\src\\components\\mainComponents\\consumptionComponents\\consumptionComponent.js":"8","F:\\react\\spa\\src\\components\\mainComponents\\joinUsComponent.js":"9","F:\\react\\spa\\src\\components\\mainComponents\\incomeComponents\\incomeComponent.js":"10"},{"size":500,"mtime":1611390533187,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606232273588,"results":"13","hashOfConfig":"12"},{"size":2209,"mtime":1612071399573,"results":"14","hashOfConfig":"12"},{"size":4584,"mtime":1611393230331,"results":"15","hashOfConfig":"12"},{"size":3071,"mtime":1611674150225,"results":"16","hashOfConfig":"12"},{"size":337,"mtime":1610548878951,"results":"17","hashOfConfig":"12"},{"size":2546,"mtime":1611470328847,"results":"18","hashOfConfig":"12"},{"size":7864,"mtime":1612276385173,"results":"19","hashOfConfig":"12"},{"size":4958,"mtime":1611156539327,"results":"20","hashOfConfig":"12"},{"size":8622,"mtime":1612698951613,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19lni4v",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"F:\\react\\spa\\src\\index.js",[],["50","51"],"F:\\react\\spa\\src\\reportWebVitals.js",[],"F:\\react\\spa\\src\\App.js",[],"F:\\react\\spa\\src\\components\\headerComponents\\headerComponet.js",["52","53","54","55","56","57","58"],"import React,{useState} from 'react';\r\nimport {Navbar, Nav,FormControl,InputGroup,Button,Image} from \"react-bootstrap\";\r\nimport \"../../css/headerCss/header.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport LoginComponent from \"../headerComponents/LoginComponent\";\r\nimport Logo from \"../../books.png\"\r\n\r\nfunction HeaderComponent(props) {\r\n\r\n    const [isLoginPage,setIsLoginPage] = useState(0);\r\n    const [nowPage, setNowPage] = useState(1);\r\n\r\n    const changeHome = (e)=>{\r\n        props.pageSetting(e);\r\n        setNowPage(e);\r\n        setIsLoginPage(0);\r\n    }\r\n\r\n    const logout = () =>{\r\n        props.pageSetting(1);\r\n        setNowPage(1);\r\n        setIsLoginPage(0);\r\n        props.loginSetting({\r\n            isLogin:0,\r\n            id:\"\",\r\n            name:\"\"\r\n        })\r\n    }\r\n\r\n    if(props.loginInfo.isLogin === 1){\r\n        return (\r\n            <div id=\"header\">\r\n                <Navbar expand=\"lg\" bg=\"secondary\" variant=\"dark\">\r\n                    <Navbar.Brand>\r\n                        <img src={Logo} width=\"300\" height=\"33\" className=\"d-inline-block align-top\"/>{' '}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse>\r\n                        <Nav>\r\n                            <Nav.Link onClick={()=>changeHome(1)}>Home</Nav.Link>\r\n                            <Nav.Link onClick={()=>changeHome(2)}>My consumption</Nav.Link>\r\n                            <Nav.Link onClick={()=>changeHome(3)}>My income</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            <div id=\"userName\">Hello! {props.loginInfo.name}&nbsp;</div>\r\n                        </Navbar.Text>\r\n                        <Navbar.Text>\r\n                            <div id=\"loginButton\" onClick={()=>logout()}>Logout</div>\r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n    else if (isLoginPage === 0){\r\n        return (\r\n            <div id=\"header\">\r\n                <Navbar expand=\"lg\" bg=\"secondary\" variant=\"dark\">\r\n                    <Navbar.Brand>\r\n                        <img src={Logo} width=\"300\" height=\"33\" className=\"d-inline-block align-top\"/>{' '}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse>\r\n                        <Nav>\r\n                            <Nav.Link onClick={()=>changeHome(1)}>Home</Nav.Link>\r\n                            <Nav.Link onClick={()=>changeHome(2)}>My consumption</Nav.Link>\r\n                            <Nav.Link onClick={()=>changeHome(3)}>My income</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            <div id=\"loginButton\" onClick={()=>setIsLoginPage(1)}>Login</div>\r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div id=\"header\">\r\n                <Navbar expand=\"lg\" bg=\"secondary\" variant=\"dark\">\r\n                    <Navbar.Brand>\r\n                        <img src={Logo} width=\"300\" height=\"33\" className=\"d-inline-block align-top\"/>{' '}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse>\r\n                        <Nav>\r\n                            <Nav.Link onClick={()=>changeHome(1)}>Home</Nav.Link>\r\n                            <Nav.Link onClick={()=>changeHome(2)}>My consumption</Nav.Link>\r\n                            <Nav.Link onClick={()=>changeHome(3)}>My income</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            <div id=\"loginButton\" onClick={()=>changeHome(nowPage)}>Login</div>\r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <LoginComponent changeHome={changeHome} loginSetting={props.loginSetting}></LoginComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","F:\\react\\spa\\src\\components\\mainComponents\\mainComponet.js",["59"],"import React from 'react';\r\nimport {Carousel,Jumbotron,Form,Button,Alert,Container,Row,Col} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport backgroundImage1 from \"../../freeimg_92769330046freejpg850.jpg\";\r\nimport backgroundImage2 from \"../../NorthConway-2-19-2020-Skating-Cranmore-WiseguyCreative.com_-5fb7fdf68ea71-850x478$large.jpg\";\r\nimport '../../css/mainCss/main.css';\r\n\r\nfunction MainComponent(props) {\r\n    return (\r\n        <div id=\"background_main\">\r\n            <Container fluid bsPrefix=\"test\" >\r\n                <Row bsPrefix=\"mainRow\">\r\n                    <Carousel>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"carousel\"\r\n                            src={backgroundImage1}\r\n                            alt=\"First slide\"/>\r\n                            <Carousel.Caption>\r\n                                <h3>First slide label</h3>\r\n                                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"carousel\"\r\n                            src={backgroundImage2}\r\n                            alt=\"First slide\"/>\r\n                            <Carousel.Caption>\r\n                                <h3>Second slide label</h3>\r\n                                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={8}>\r\n                        <Alert variant={\"light\"}>\r\n                            <Alert.Heading>FUN</Alert.Heading>\r\n                            text\r\n                        </Alert>\r\n                        <Alert variant={\"primary\"}>\r\n                            <Alert.Heading>EXCITING</Alert.Heading>\r\n                            text\r\n                        </Alert>\r\n                        <Alert variant={\"warning\"}>\r\n                            <Alert.Heading>SMART</Alert.Heading>\r\n                            text\r\n                        </Alert>\r\n                        <Jumbotron>\r\n                            <h1>Hello, world!</h1>\r\n                            <p>\r\n                                This is a simple hero unit, a simple jumbotron-style component for calling\r\n                                extra attention to featured content or information.\r\n                            </p>\r\n                            <p>\r\n                                <Button variant=\"primary\">Learn more</Button>\r\n                            </p>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainComponent;","F:\\react\\spa\\src\\components\\footerComponents\\footerComponent.js",["60","61","62","63","64","65"],"import React from 'react';\r\nimport {Navbar, Nav,NavDropdown,Form,Button,FormControl} from \"react-bootstrap\";\r\nimport \"../../css/footerCss/footer.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction FooterComponent(props) {\r\n    return (\r\n        <div id=\"footer\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterComponent;","F:\\react\\spa\\src\\components\\headerComponents\\LoginComponent.js",["66","67","68","69","70","71","72"],"import React, {useState} from 'react';\r\nimport {Navbar, Nav,FormControl,InputGroup,Button} from \"react-bootstrap\";\r\nimport \"../../css/headerCss/login.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport {\r\n    ReasonPhrases,\r\n    StatusCodes,\r\n    getStatusCode,\r\n} from 'http-status-codes';\r\n\r\nexport default function LoginComponent(props) {\r\n\r\n    const [login, setLogin] = useState({\r\n        id:\"\",\r\n        password:\"\"\r\n    });\r\n\r\n    const subminLogin = (e) => {\r\n        axios.post(\"http://localhost:8080/login\",new URLSearchParams({\r\n            'id': login.id,\r\n            'password': login.password,\r\n          }),{\r\n            headers:{\r\n                'Content-Type': 'application/x-www-form-urlencoded;'\r\n            }\r\n          }\r\n        ).then(function(response){\r\n            if(response.status == StatusCodes.OK){\r\n                props.loginSetting({\r\n                    isLogin:1,\r\n                    id:response.data.id,\r\n                    name:response.data.name,\r\n                });\r\n                props.changeHome(1);\r\n            }\r\n        }).catch(function(err){\r\n            if(err.request.status == StatusCodes.BAD_REQUEST){\r\n                alert(\"id not signed up\");\r\n            } else if (err.message == \"Network Error\"){\r\n                alert(\"network err\")\r\n            } else{\r\n                alert(\"wrong password\");\r\n                console.log(err.request)\r\n            }\r\n        })\r\n    }\r\n\r\n    const changeId = (e) => {\r\n        login.id = e.target.value;\r\n        setLogin(login);\r\n    }\r\n\r\n    const changePassword = (e) => {\r\n        login.password = e.target.value;\r\n        setLogin(login);\r\n    }\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <InputGroup>\r\n                <FormControl\r\n                placeholder=\"ID\"\r\n                aria-label=\"ID\"\r\n                aria-describedby=\"basic-addon2\"\r\n                onChange = {(e)=>changeId(e)}\r\n                />\r\n                <FormControl\r\n                placeholder=\"PASSWORD\"\r\n                aria-label=\"PASSWORD\"\r\n                aria-describedby=\"basic-addon2\"\r\n                onChange = {(e)=>changePassword(e)}\r\n                />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\" onClick={(e)=>subminLogin(e)}>Submit</Button>\r\n                    <Button variant=\"outline-secondary\" onClick={()=>props.changeHome(4)}>Join us</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n}","F:\\react\\spa\\src\\components\\mainComponents\\consumptionComponents\\consumptionComponent.js",["73","74","75","76","77","78","79"],"import React,{useState,useEffect} from 'react';\r\nimport {Container,Row,Col,InputGroup,FormControl,Button,Card,OverlayTrigger,Popover} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../../css/mainCss/consumption.css\";\r\nimport axios from 'axios';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ko from 'date-fns/locale/ko';\r\nimport {\r\n    ReasonPhrases,\r\n    StatusCodes,\r\n    getStatusCode,\r\n} from 'http-status-codes';\r\n\r\nregisterLocale('ko', ko)\r\n\r\nfunction ConsumptionComponent(props) {\r\n\r\n    const [consumptionInfo,setConsumptionInfo] = useState({\r\n            consumption:\"\",\r\n            amount:0,\r\n        }\r\n    )\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [consumptionListData, setConsumptionListData] = useState([]);\r\n    const [reranderFlag,setReranderFalg] = useState(0);\r\n\r\n    const changeConsumption = (e) => {\r\n        consumptionInfo.consumption = e.target.value;\r\n        setConsumptionInfo(consumptionInfo);\r\n    }\r\n\r\n    const changeAmount = (e) => {\r\n        consumptionInfo.amount = e.target.value;\r\n        setConsumptionInfo(consumptionInfo);\r\n    }\r\n\r\n    const submitConsumption = () => {\r\n        if(!Number(consumptionInfo.amount)){\r\n            alert(\"Amount must be Number\");\r\n            return null;\r\n        }else if (props.loginInfo.isLogin === 0) {\r\n            alert(\"please login\");\r\n            return null;\r\n        }{\r\n            axios.post(\"http://localhost:8080/setConsumption\",new URLSearchParams({\r\n                'consumption': consumptionInfo.consumption,\r\n                'amount': consumptionInfo.amount,\r\n                \"id\": props.loginInfo.id,\r\n                \"date\": startDate.toISOString(),\r\n              }),{\r\n                headers:{\r\n                    'Content-Type': 'application/x-www-form-urlencoded;'\r\n                }\r\n              }\r\n            ).then(()=>{\r\n                setReranderFalg(reranderFlag+1);\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(props.loginInfo.isLogin === 1){\r\n            axios.get(\"http://localhost:8080/getAllConsumption?id=\"+props.loginInfo.id).then((e)=>{\r\n                if (e.data.message == null){\r\n                    setConsumptionListData([\r\n                        {date:\"null\"},\r\n                    ])\r\n                } else {\r\n                    setConsumptionListData(e.data.message);\r\n                }\r\n            }).catch((err)=>{\r\n                if(err.request.status == StatusCodes.BAD_REQUEST){\r\n                    alert(\"id not signed up\");\r\n                } else if (err.message == \"Network Error\"){\r\n                    alert(\"network err\")\r\n                } else{\r\n                    alert(\"wrong password\");\r\n                    console.log(err.request)\r\n                }\r\n            })\r\n        }\r\n    },[reranderFlag])\r\n\r\n    return(\r\n            <div id=\"background_con\">\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col xs={6}>\r\n                            <label id=\"consumptionLabel\">My Consumption</label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text><div className=\"inputText\">Consumption</div></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl onChange={(e)=>changeConsumption(e)}/>\r\n                            </InputGroup>\r\n                            <br></br>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text><div className=\"inputText\">&nbsp;&nbsp;&nbsp;&nbsp; Amount &nbsp;&nbsp;&nbsp;</div></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl onChange={(e)=>changeAmount(e)}/>\r\n                            </InputGroup>\r\n                            <br></br>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text><div className=\"inputText\">&nbsp;&nbsp;&nbsp;&nbsp; Date &nbsp;&nbsp;&nbsp;</div></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <DatePicker id=\"dataPicker\" selected={startDate} onChange={date => setStartDate(date)} locale=\"ko\" dateFormat={\"yyyy-MM-dd\"}/> \r\n                            </InputGroup>\r\n                            <br></br>\r\n                            <Button variant=\"dark\" onClick={()=>submitConsumption()}>Submit</Button>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col xs={6}>\r\n                            <label id=\"consumptionLabel\">Consumption List</label>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                    {props.loginInfo.isLogin ? <Row>\r\n                                <div id=\"list\">\r\n                                {consumptionListData.map((e,i)=>{\r\n                                    return (\r\n                                        <Card key={i} style={{ width: '20em', float:\"left\", marginLeft:\"2%\",marginBottom:\"2%\" }}>\r\n                                            <Card.Body>\r\n                                                <Card.Title>\r\n                                                    {new Date(e.date).getFullYear()}-\r\n                                                    {new Date(e.date).getMonth()+1}-\r\n                                                    {new Date(e.date).getDate()}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"mb-2 text-muted\">{e.id}</Card.Subtitle>\r\n                                                <Card.Text>\r\n                                                    Amount : {e.amount}\r\n                                                    <br></br>\r\n                                                    {e.consumption ? new String(e.consumption).slice(0,6) + \"...\" : \"empty\"}\r\n                                                </Card.Text>\r\n                                                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                                                    <Popover id=\"popover-basic\">\r\n                                                        <Popover.Title as=\"h3\">consumtion</Popover.Title>\r\n                                                        <Popover.Content>\r\n                                                            {e.consumption}\r\n                                                        </Popover.Content>\r\n                                                    </Popover>\r\n                                                }>\r\n                                                    <Button variant=\"dark\">Click me to see</Button>\r\n                                                </OverlayTrigger>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    )\r\n                                })}\r\n                                </div>\r\n                        </Row> : <Row>\r\n                            <Col></Col>\r\n                            <Col xs={6}>\r\n                                <label id=\"consumptionLabel\">Login please</label>\r\n                            </Col>\r\n                            <Col></Col>\r\n                        </Row>}\r\n                </Container>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ConsumptionComponent;","F:\\react\\spa\\src\\components\\mainComponents\\joinUsComponent.js",["80","81","82","83","84","85","86"],"import React,{useState} from 'react';\r\nimport {Row, Col,InputGroup,Form,FormControl, Container,Button} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../css/mainCss/joinUs.css\";\r\nimport {\r\n    ReasonPhrases,\r\n    StatusCodes,\r\n    getReasonPhrase,\r\n    getStatusCode,\r\n} from 'http-status-codes';\r\n\r\nfunction JoinUsComponent(props){\r\n\r\n    const [joinUsInfo,setJoinUsInfo] = useState({\r\n            id:\"\",\r\n            password:\"\",\r\n            name:\"\",\r\n        }\r\n    )\r\n\r\n    const changeId = (e)=>{\r\n        joinUsInfo.id = e.target.value;\r\n        setJoinUsInfo(joinUsInfo);\r\n    }\r\n\r\n    const changePassword = (e)=>{\r\n        joinUsInfo.password = e.target.value;\r\n        setJoinUsInfo(joinUsInfo);\r\n    }\r\n\r\n    const changeName = (e)=>{\r\n        joinUsInfo.name = e.target.value;\r\n        setJoinUsInfo(joinUsInfo);\r\n    }\r\n\r\n    const setUserInfo = () => {\r\n        axios.post(\"http://localhost:8080/joinUs\",new URLSearchParams({\r\n            'id': joinUsInfo.id,\r\n            'password': joinUsInfo.password,\r\n            'name': joinUsInfo.name\r\n          }),{\r\n            headers:{\r\n                'Content-Type': 'application/x-www-form-urlencoded;'\r\n            }\r\n          }\r\n        ).then(function(response){\r\n            if(response.status == StatusCodes.OK){\r\n                alert(\"join success\");\r\n\r\n                //redux setting onlogin\r\n\r\n                props.pageSetting(1);\r\n            }\r\n        }).catch(function(err){\r\n            if(err.request.status == StatusCodes.INTERNAL_SERVER_ERROR){\r\n                alert(\"existed id\");\r\n            } else if (err.message == \"Network Error\"){\r\n                alert(\"network err\")\r\n            }else{\r\n                alert(\"server fail\");\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id=\"background_join\">\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <label id=\"joinUsLabel\">Join Us</label>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text><div className=\"inputText\">&nbsp;&nbsp;&nbsp;&nbsp; ID &nbsp;&nbsp;&nbsp;&nbsp;</div></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            placeholder=\"ID\"\r\n                            aria-label=\"ID\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            onChange={(e)=>changeId(e)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text><div className=\"inputText\">PASSWORD</div></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            placeholder=\"PASSWORD\"\r\n                            aria-label=\"PASSWORD\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            onChange={(e)=>changePassword(e)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text><div className=\"inputText\">&nbsp;&nbsp; NAME &nbsp;&nbsp;</div></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                            placeholder=\"NAME\"\r\n                            aria-label=\"NAME\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            onChange={(e)=>changeName(e)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <Button variant=\"outline-secondary\" onClick={()=>setUserInfo()}>Submit</Button>{' '}\r\n                        <Button variant=\"outline-secondary\" onClick={()=>props.pageSetting(1)}>Cancel</Button>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinUsComponent;\r\n\r\n","F:\\react\\spa\\src\\components\\mainComponents\\incomeComponents\\incomeComponent.js",["87","88","89","90","91","92","93"],"import React,{useState,useEffect,useTrail} from 'react';\r\nimport {Container,Row,Col,InputGroup,FormControl,Button,Card,Alert,Pagination, PageItem} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {useSpring,animated, config} from 'react-spring';\r\nimport {\r\n    StatusCodes,\r\n} from 'http-status-codes';\r\n\r\nexport default function IncomeComponent(props) {\r\n\r\n    const [incomeInfo,setIncomeInfo] = useState({\r\n            income:\"\",\r\n            amount:0,\r\n        }\r\n    )\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [reranderFlag,setReranderFalg] = useState(0);\r\n    const [page,setPage] = useState(1);\r\n    const [maxPage, setMaxPage] = useState(1);\r\n    const [incomeList, setIncomeList] = useState([]);\r\n    const styleProps = useSpring({opacity:1, from: {opacity: 0},config:config.molasses});\r\n\r\n    const changeIncome = (e) => {\r\n        incomeInfo.income = e.target.value;\r\n        setIncomeInfo(incomeInfo);\r\n    }\r\n\r\n    const changeAmount = (e) => {\r\n        incomeInfo.amount = e.target.value;\r\n        setIncomeInfo(incomeInfo);\r\n    }\r\n\r\n    const submitIncome = () => {\r\n        if(!Number(incomeInfo.amount)){\r\n            alert(\"Amount must be Number\");\r\n            return null;\r\n        }else if (props.loginInfo.isLogin === 0) {\r\n            alert(\"please login\");\r\n            return null;\r\n        }{\r\n            axios.post(\"http://localhost:8080/setIncome\",new URLSearchParams({\r\n                'income': incomeInfo.income,\r\n                'amount': incomeInfo.amount,\r\n                \"id\": props.loginInfo.id,\r\n                \"date\": startDate.toISOString(),\r\n              }),{\r\n                headers:{\r\n                    'Content-Type': 'application/x-www-form-urlencoded;'\r\n                }\r\n              }\r\n            ).then(()=>{\r\n                setReranderFalg(reranderFlag+1);\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/getIncome?page=\"+page).then((e)=>{\r\n            if(e.data.message == null){\r\n                setIncomeList([\r\n                    {data:\"null\"}\r\n                ])\r\n            }else{\r\n                setIncomeList(e.data.message)\r\n                setMaxPage(e.data.maxLength)\r\n            }\r\n        }).catch((err)=>{\r\n            if(err.request.status == StatusCodes.BAD_REQUEST){\r\n\r\n            }else{\r\n\r\n            }\r\n        })\r\n    }, [reranderFlag])\r\n\r\n    const paginationBasic = ()=>{\r\n        let items = [];\r\n        if (maxPage<6){\r\n            for (let number = 1; number <= maxPage; number++) {\r\n                items.push(\r\n                    <Pagination.Item key={number} active={number === page} onClick={()=>{clickPage(number)}}>\r\n                        {number}\r\n                    </Pagination.Item>,\r\n                );\r\n            }\r\n        }\r\n        else if(page<3){\r\n            for (let number = 1; number <= 5; number++) {\r\n                items.push(\r\n                    <Pagination.Item key={number} active={number === page} onClick={()=>{clickPage(number)}}>\r\n                        {number}\r\n                    </Pagination.Item>,\r\n                );\r\n            }\r\n            items.push(\r\n                <Pagination.Ellipsis />\r\n            )\r\n        }else if(page<maxPage-4){\r\n            items.push(\r\n                <Pagination.Ellipsis />\r\n            )\r\n            for (let number = page; number <= page+4; number++) {\r\n                items.push(\r\n                    <Pagination.Item key={number} active={number === page} onClick={()=>{clickPage(number)}}>\r\n                        {number}\r\n                    </Pagination.Item>,\r\n                );\r\n            }\r\n              items.push(\r\n                <Pagination.Ellipsis />\r\n            )\r\n        }else{\r\n            items.push(\r\n                <Pagination.Ellipsis />\r\n            )\r\n            for (let number = maxPage-4; number <= maxPage; number++) {\r\n                items.push(\r\n                    <Pagination.Item key={number} active={number === page} onClick={()=>{clickPage(number)}}>\r\n                        {number}\r\n                    </Pagination.Item>,\r\n                );\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                <Pagination>\r\n                    <Pagination.First onClick={()=>firstAndLastPage(1)}/>\r\n                    <Pagination.Prev onClick={()=>prevPage()}/>\r\n                    {items}\r\n                    <Pagination.Next onClick={()=>nextPage()}/>\r\n                    <Pagination.Last onClick={()=>firstAndLastPage(maxPage)}/>\r\n                </Pagination>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const clickPage = (number) => {\r\n        setPage(number)\r\n        setReranderFalg(reranderFlag+1)\r\n    }\r\n\r\n    const prevPage = () => {\r\n        if (page <= 1){\r\n            setPage(1)\r\n        }\r\n        else {\r\n            setPage(page -1)\r\n        }\r\n        setReranderFalg(reranderFlag+1)\r\n    }\r\n\r\n    const nextPage = () => {\r\n        if (page >= maxPage){\r\n            setPage(maxPage)\r\n        }\r\n        else {\r\n            setPage(page +1)\r\n        }\r\n        setReranderFalg(reranderFlag+1)\r\n    }\r\n\r\n    const firstAndLastPage=(page) => {\r\n        setPage(page)\r\n        setReranderFalg(page+1)\r\n    }\r\n\r\n    return (\r\n        <div id=\"background_con\">\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <label id=\"consumptionLabel\">My Income</label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text><div className=\"inputText\">&nbsp;&nbsp;&nbsp;&nbsp;Income&nbsp;&nbsp;&nbsp;&nbsp;</div></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl onChange={(e)=>changeIncome(e)}/>\r\n                        </InputGroup>\r\n                        <br></br>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text><div className=\"inputText\">&nbsp;&nbsp;&nbsp;&nbsp; Amount &nbsp;&nbsp;&nbsp;</div></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl onChange={(e)=>changeAmount(e)}/>\r\n                        </InputGroup>\r\n                        <br></br>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text><div className=\"inputText\">&nbsp;&nbsp;&nbsp;&nbsp; Date &nbsp;&nbsp;&nbsp;</div></InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <DatePicker id=\"dataPicker\" selected={startDate} onChange={date => setStartDate(date)} locale=\"ko\" dateFormat={\"yyyy-MM-dd\"}/> \r\n                        </InputGroup>\r\n                        <br></br>\r\n                        <Button variant=\"dark\" onClick={()=>submitIncome()}>Submit</Button>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <label id=\"consumptionLabel\">Income List</label>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={7}>\r\n                    {incomeList.map((e,i)=>{\r\n                        return (\r\n                            <animated.div style={styleProps}>\r\n                                <Alert variant={\"light\"}>\r\n                                    <Alert.Heading>{e.id}</Alert.Heading>\r\n                                    <h6>{e.date}</h6>\r\n                                    <p>\r\n                                        Mount : {e.amount}\r\n                                        <br></br>\r\n                                        {e.income}\r\n                                    </p>\r\n                                </Alert>\r\n                            </animated.div>\r\n                        )\r\n                    })}\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        {paginationBasic()}\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":21,"nodeType":"100","messageId":"101","endLine":2,"endColumn":32},{"ruleId":"98","severity":1,"message":"102","line":2,"column":33,"nodeType":"100","messageId":"101","endLine":2,"endColumn":43},{"ruleId":"98","severity":1,"message":"103","line":2,"column":44,"nodeType":"100","messageId":"101","endLine":2,"endColumn":50},{"ruleId":"98","severity":1,"message":"104","line":2,"column":51,"nodeType":"100","messageId":"101","endLine":2,"endColumn":56},{"ruleId":"105","severity":1,"message":"106","line":35,"column":25,"nodeType":"107","endLine":35,"endColumn":103},{"ruleId":"105","severity":1,"message":"106","line":62,"column":25,"nodeType":"107","endLine":62,"endColumn":103},{"ruleId":"105","severity":1,"message":"106","line":86,"column":25,"nodeType":"107","endLine":86,"endColumn":103},{"ruleId":"98","severity":1,"message":"108","line":2,"column":28,"nodeType":"100","messageId":"101","endLine":2,"endColumn":32},{"ruleId":"98","severity":1,"message":"109","line":2,"column":9,"nodeType":"100","messageId":"101","endLine":2,"endColumn":15},{"ruleId":"98","severity":1,"message":"110","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"111","line":2,"column":21,"nodeType":"100","messageId":"101","endLine":2,"endColumn":32},{"ruleId":"98","severity":1,"message":"108","line":2,"column":33,"nodeType":"100","messageId":"101","endLine":2,"endColumn":37},{"ruleId":"98","severity":1,"message":"103","line":2,"column":38,"nodeType":"100","messageId":"101","endLine":2,"endColumn":44},{"ruleId":"98","severity":1,"message":"99","line":2,"column":45,"nodeType":"100","messageId":"101","endLine":2,"endColumn":56},{"ruleId":"98","severity":1,"message":"109","line":2,"column":9,"nodeType":"100","messageId":"101","endLine":2,"endColumn":15},{"ruleId":"98","severity":1,"message":"110","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"112","line":7,"column":5,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":9,"column":5,"nodeType":"100","messageId":"101","endLine":9,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":29,"column":32,"nodeType":"116","messageId":"117","endLine":29,"endColumn":34},{"ruleId":"114","severity":1,"message":"115","line":38,"column":35,"nodeType":"116","messageId":"117","endLine":38,"endColumn":37},{"ruleId":"114","severity":1,"message":"115","line":40,"column":36,"nodeType":"116","messageId":"117","endLine":40,"endColumn":38},{"ruleId":"98","severity":1,"message":"112","line":10,"column":5,"nodeType":"100","messageId":"101","endLine":10,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":12,"column":5,"nodeType":"100","messageId":"101","endLine":12,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":45,"column":10,"nodeType":"120","messageId":"121","endLine":59,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":73,"column":39,"nodeType":"116","messageId":"117","endLine":73,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":75,"column":40,"nodeType":"116","messageId":"117","endLine":75,"endColumn":42},{"ruleId":"122","severity":1,"message":"123","line":83,"column":7,"nodeType":"124","endLine":83,"endColumn":21,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":139,"column":70,"nodeType":"128","messageId":"129","endLine":139,"endColumn":95},{"ruleId":"98","severity":1,"message":"108","line":2,"column":29,"nodeType":"100","messageId":"101","endLine":2,"endColumn":33},{"ruleId":"98","severity":1,"message":"112","line":7,"column":5,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"130","line":9,"column":5,"nodeType":"100","messageId":"101","endLine":9,"endColumn":20},{"ruleId":"98","severity":1,"message":"113","line":10,"column":5,"nodeType":"100","messageId":"101","endLine":10,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":48,"column":32,"nodeType":"116","messageId":"117","endLine":48,"endColumn":34},{"ruleId":"114","severity":1,"message":"115","line":56,"column":35,"nodeType":"116","messageId":"117","endLine":56,"endColumn":37},{"ruleId":"114","severity":1,"message":"115","line":58,"column":36,"nodeType":"116","messageId":"117","endLine":58,"endColumn":38},{"ruleId":"98","severity":1,"message":"131","line":1,"column":34,"nodeType":"100","messageId":"101","endLine":1,"endColumn":42},{"ruleId":"98","severity":1,"message":"132","line":2,"column":57,"nodeType":"100","messageId":"101","endLine":2,"endColumn":61},{"ruleId":"98","severity":1,"message":"133","line":2,"column":80,"nodeType":"100","messageId":"101","endLine":2,"endColumn":88},{"ruleId":"98","severity":1,"message":"134","line":4,"column":20,"nodeType":"100","messageId":"101","endLine":4,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":42,"column":10,"nodeType":"120","messageId":"121","endLine":56,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":70,"column":35,"nodeType":"116","messageId":"117","endLine":70,"endColumn":37},{"ruleId":"122","severity":1,"message":"135","line":76,"column":8,"nodeType":"124","endLine":76,"endColumn":22,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'ReasonPhrases' is defined but never used.","'getStatusCode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.loginInfo.id' and 'props.loginInfo.isLogin'. Either include them or remove the dependency array.","ArrayExpression",["139"],"no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'getReasonPhrase' is defined but never used.","'useTrail' is defined but never used.","'Card' is defined but never used.","'PageItem' is defined but never used.","'registerLocale' is defined but never used.","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [props.loginInfo.id, props.loginInfo.isLogin, reranderFlag]",{"range":"145","text":"146"},"Update the dependencies array to be: [page, reranderFlag]",{"range":"147","text":"148"},[2907,2921],"[props.loginInfo.id, props.loginInfo.isLogin, reranderFlag]",[2517,2531],"[page, reranderFlag]"]